import Head from 'next/head'
import { useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'
import { LinksPages } from '../components/links';
import { Loader } from '../components/loader';

let page = 10

export default function Home() {
  const [scrollY, setScrollY] = useState(0) //Variable get move scroll
  const [outerY, setOuterY] = useState(1) //Variable get size windown only Y.
  const [loader, setLoader] = useState(true)
  const [catchErr, setCatchErr] = useState(false) //If there is issues with FETCH
  const [webMalvestidas, setWebMalvestidas] = useState([]) //all posts data

  async function postsMalvestidas(){
    try{
      const res = await fetch(`https://malvestida.com/wp-json/wp/v2/posts?_embed&per_page=${page}`);
      const data = await res.json()
      setWebMalvestidas(data)
    } catch(err){
      setCatchErr(true)
    } finally{
      setLoader(false)
    }
  }

  useEffect(()=>{
    postsMalvestidas() //Get pots malvestida.com \\ function line 15 to 20
    //Handle infinite scroll
    const handleScroll = () => {        
      setScrollY(window.scrollY);
      setOuterY(document.body.offsetHeight-window.innerHeight)
    }

    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  },[page])
  //Detect when scroll is completely down for load more data
  if(scrollY === outerY && !loader){
    setLoader(true)
    setScrollY(0)
    //console.log("Hello W0rld")
    page = page + 5 //How many new data get 
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Malvestidas&apos;s Notices</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossOrigin="anonymous"></link>
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://malvestida.com/" target="_blank" rel="noreferrer">Malvestidas&apos;s notices</a>
        </h1>

        {!loader &&
          <LinksPages />
        }

        {catchErr &&
          <h5>Error with request, try later</h5>
        }

        <div>
          {webMalvestidas.length !== 0 && webMalvestidas.map(malvestida => {
            return(
              <div className='d-flex justify-content-center' key={malvestida.id}>
              <div className={styles.card}>
                <picture>
                  <img src={malvestida._embedded["wp:featuredmedia"][0].source_url} className="card-img-top" alt={malvestida.title.rendered} />
                </picture>
                <div className="card-body">
                  <h5 className="card-title">{malvestida.title.rendered}</h5>
                  <br />
                  <p className="card-text">{malvestida.yoast_head_json.description}</p>
                  <hr />
                  <p className="card-text">Articulo relizado por: <strong>{malvestida._embedded.author[0].name}</strong> el {malvestida.date.substring(0,10)}</p>
                  <p className="card-text">Aticulo basado en: <strong>{malvestida._embedded["wp:term"][0][0].name}</strong></p>
                </div>
                <br />
                <details>
                  <summary>Ver contenido de la publicacion</summary>
                  <br />
                  <article dangerouslySetInnerHTML={{ __html:malvestida.content.rendered }}></article>
                  <br/>
                  <a href={malvestida.guid.rendered} target="_blank" className={styles.oficialPage} rel="noreferrer">Leer en la pagina oficial</a>
                </details>
              </div>
              </div>
            )
          })}
        </div>
         {loader && <Loader />}
      </main>
    </div>
  )
}